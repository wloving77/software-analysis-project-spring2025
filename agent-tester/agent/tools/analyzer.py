import os
from pathlib import Path
import subprocess

def extract_interesting_afl_inputs(output_dir: str, limit=5):
    crash_dir = Path(output_dir) / "default" / "crashes"
    queue_dir = Path(output_dir) / "default" / "queue"

    seeds = []

    if crash_dir.exists():
        for f in sorted(crash_dir.glob("id:*"))[:limit]:
            with open(f, "r", errors="ignore") as fin:
                seeds.append(fin.read().strip())

    if not seeds and queue_dir.exists():
        for f in sorted(queue_dir.glob("id:*"))[:limit]:
            with open(f, "r", errors="ignore") as fin:
                seeds.append(fin.read().strip())

    return seeds


def extract_klee_inputs(klee_output_dir: Path, limit=5) -> list[str]:
    """
    Extract symbolic test inputs generated by KLEE in .ktest files.
    Uses `ktest-tool` to parse values.
    """
    inputs = []
    for ktest_file in sorted(klee_output_dir.glob("*.ktest"))[:limit]:
        try:
            result = subprocess.run(
                ["ktest-tool", str(ktest_file)],
                capture_output=True, text=True, check=True
            )
            raw = result.stdout
            for line in raw.splitlines():
                if "object" in line and "data:" in line:
                    data_part = line.split("data:", 1)[-1].strip()
                    byte_values = data_part.split()
                    text = ''.join(chr(int(b, 16)) for b in byte_values if int(b, 16) < 128)
                    inputs.append(text.strip())
        except Exception as e:
            print(f"[!] Failed to parse {ktest_file}: {e}")
    return inputs


def get_afl_coverage(afl_output_dir: str) -> int:
    stats_file = Path(afl_output_dir) / "default" / "fuzzer_stats"
    if not stats_file.exists():
        print(f"[⚠️] Missing fuzzer_stats at {stats_file}")
        return -1

    for line in stats_file.read_text().splitlines():
        if line.startswith("paths_total"):
            return int(line.split(":")[1].strip())

    print("[⚠️] paths_total not found in fuzzer_stats.")
    return -1
